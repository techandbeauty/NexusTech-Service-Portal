{
    "sourceFile": "README.MD",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1749990713050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1749990713050,
            "name": "Commit-0",
            "content": "# Nexus Tech Digital Solutions Website\n\nA modern, gaming-inspired website for Nexus Tech Digital Solutions with integrated Netlify forms and Firebase authentication.\n\n## üöÄ Features\n\n- **Modern Design**: PlayStation-inspired dark theme with cyan accents\n- **Responsive**: Works perfectly on all devices\n- **Form Handling**: Netlify forms with spam protection\n- **User Authentication**: Firebase Auth with Google sign-in\n- **User Dashboard**: Client project management and account settings\n- **Real-time Database**: Firestore for project inquiries and user data\n- **Professional**: Enterprise-ready with proper SEO and performance optimization\n\n## üìÅ File Structure\n\n```\nnexus-tech-website/\n‚îú‚îÄ‚îÄ index.html              # Homepage\n‚îú‚îÄ‚îÄ apps.html               # App Development page\n‚îú‚îÄ‚îÄ websites.html           # Web Development page\n‚îú‚îÄ‚îÄ services.html           # Services (Games, Templates, Support)\n‚îú‚îÄ‚îÄ portfolio.html          # Portfolio & Case Studies\n‚îú‚îÄ‚îÄ connect.html            # Contact & Discovery Call form\n‚îú‚îÄ‚îÄ dashboard.html          # User Dashboard (Auth required)\n‚îú‚îÄ‚îÄ js/\n‚îÇ   ‚îî‚îÄ‚îÄ firebase-config.js  # Firebase configuration\n‚îú‚îÄ‚îÄ netlify.toml           # Netlify configuration\n‚îú‚îÄ‚îÄ _redirects             # Netlify redirects\n‚îú‚îÄ‚îÄ .env.template          # Environment variables template\n‚îî‚îÄ‚îÄ README.md              # This file\n```\n\n## üîß Setup Instructions\n\n### 1. Firebase Setup\n\n1. **Create Firebase Project**:\n   - Go to [Firebase Console](https://console.firebase.google.com/)\n   - Click \"Create a project\"\n   - Name it \"nexus-tech-website\" (or your preferred name)\n   - Enable Google Analytics (optional)\n\n2. **Configure Authentication**:\n   - Go to Authentication > Sign-in method\n   - Enable \"Email/Password\" \n   - Enable \"Google\" sign-in\n   - Add your domain to authorized domains\n\n3. **Setup Firestore Database**:\n   - Go to Firestore Database\n   - Create database in \"production mode\"\n   - Choose your preferred region\n   - Set up these collections:\n     - `users` (for user profiles)\n     - `projectInquiries` (for form submissions)\n\n4. **Get Firebase Config**:\n   - Go to Project Settings (gear icon)\n   - Scroll to \"Your apps\" section\n   - Click \"Web\" app icon\n   - Copy the config object values\n\n5. **Configure Firestore Security Rules**:\n   ```javascript\n   rules_version = '2';\n   service cloud.firestore {\n     match /databases/{database}/documents {\n       // Users can read/write their own data\n       match /users/{userId} {\n         allow read, write: if request.auth != null && request.auth.uid == userId;\n       }\n       \n       // Project inquiries - users can create, read their own\n       match /projectInquiries/{document} {\n         allow create: if request.auth != null;\n         allow read: if request.auth != null && \n           (request.auth.uid == resource.data.userId || \n            request.auth.token.email in ['hello@nexustech.dev', 'admin@nexustech.dev']);\n       }\n     }\n   }\n   ```\n\n### 2. Netlify Deployment\n\n1. **Prepare Your Code**:\n   - Upload all files to a GitHub repository\n   - Update `js/firebase-config.js` with your Firebase config values\n   - Ensure all files are in the root directory\n\n2. **Deploy to Netlify**:\n   - Connect your GitHub repo to Netlify\n   - Build settings: \n     - Build command: `echo \"No build needed\"`\n     - Publish directory: `/` (root)\n   - Deploy the site\n\n3. **Configure Environment Variables**:\n   - Go to Site Settings > Environment Variables\n   - Add your Firebase configuration:\n     ```\n     FIREBASE_API_KEY=your-api-key\n     FIREBASE_AUTH_DOMAIN=your-project.firebaseapp.com\n     FIREBASE_PROJECT_ID=your-project-id\n     FIREBASE_STORAGE_BUCKET=your-project.appspot.com\n     FIREBASE_MESSAGING_SENDER_ID=your-sender-id\n     FIREBASE_APP_ID=your-app-id\n     FIREBASE_DATABASE_URL=https://your-project-default-rtdb.firebaseio.com/\n     ```\n\n4. **Enable Form Notifications** (Optional):\n   - Go to Site Settings > Forms\n   - Add notification emails\n   - Configure form submissions\n\n### 3. Domain Configuration\n\n1. **Custom Domain** (Optional):\n   - Add your custom domain in Netlify\n   - Update Firebase authorized domains\n   - Configure DNS settings\n\n2. **SSL Certificate**:\n   - Netlify automatically provides SSL\n   - Ensure HTTPS is enforced\n\n### 4. Testing\n\n1. **Form Submissions**:\n   - Test the contact form on `/connect.html`\n   - Check Netlify dashboard for submissions\n   - Verify email notifications work\n\n2. **User Authentication**:\n   - Test sign up with email/password\n   - Test Google sign-in\n   - Check Firestore for user data\n   - Test user dashboard functionality\n\n3. **Database Operations**:\n   - Submit project inquiries while signed in\n   - Check dashboard shows user's projects\n   - Verify data appears in Firestore\n\n## üõ†Ô∏è Development\n\n### Local Development\n\n1. **Firebase Emulator** (Optional for local testing):\n   ```bash\n   npm install -g firebase-tools\n   firebase login\n   firebase init emulators\n   firebase emulators:start\n   ```\n\n2. **Update Firebase Config**:\n   - For local development, update the config in `js/firebase-config.js`\n   - Use emulator endpoints when running locally\n\n### Customization\n\n1. **Styling**:\n   - Colors are defined as CSS variables\n   - Main brand color: `#00d4ff` (cyan)\n   - Background: `#0d1117` (dark blue)\n   - Accent: `#0066ff` (blue)\n\n2. **Content**:\n   - Update company information in all HTML files\n   - Modify services in `services.html`\n   - Add real portfolio items in `portfolio.html`\n\n3. **Forms**:\n   - Additional form fields can be added to `connect.html`\n   - Netlify automatically detects form changes\n\n## üìß Form Management\n\n### Netlify Forms Features\n\n- **Spam Protection**: Built-in reCAPTCHA\n- **Email Notifications**: Automatic email alerts\n- **Form Submissions**: View in Netlify dashboard\n- **Export Data**: Download submissions as CSV\n- **Webhooks**: Integrate with external services\n\n### Adding New Forms\n\n1. Add `data-netlify=\"true\"` to form element\n2. Include `<input type=\"hidden\" name=\"form-name\" value=\"form-name\">`\n3. Deploy to Netlify\n4. Test form submission\n\n## üë• User Management\n\n### Firebase Auth Features\n\n- **Email/Password**: Standard authentication\n- **Google Sign-in**: Social authentication  \n- **User Profiles**: Stored in Firestore\n- **Project Tracking**: Users can view their inquiries\n- **Role-based Access**: Admin vs client roles\n\n### Admin Access\n\n- Admin users can view all project inquiries\n- Add admin emails to Firestore security rules\n- Create admin dashboard (future enhancement)\n\n## üîí Security\n\n### Best Practices Implemented\n\n- **HTTPS Only**: Enforced via Netlify\n- **Content Security Policy**: Defined in `netlify.toml`\n- **Firebase Security Rules**: Protect user data\n- **Environment Variables**: Sensitive data in env vars\n- **Form Validation**: Client and server-side validation\n\n## üìä Analytics & Monitoring\n\n### Firebase Analytics\n\n- Automatically tracks page views\n- Custom events for form submissions\n- User engagement metrics\n- Conversion tracking\n\n### Netlify Analytics\n\n- Site performance metrics\n- Form submission tracking\n- Error monitoring\n- Traffic analysis\n\n## üöÄ Deployment Checklist\n\n- [ ] Firebase project created and configured\n- [ ] Authentication methods enabled\n- [ ] Firestore database setup with security rules\n- [ ] Firebase config added to `js/firebase-config.js`\n- [ ] Code pushed to GitHub repository\n- [ ] Netlify site connected to GitHub\n- [ ] Environment variables configured in Netlify\n- [ ] Custom domain configured (if applicable)\n- [ ] SSL certificate active\n- [ ] Form submissions tested\n- [ ] User authentication tested\n- [ ] Database operations tested\n- [ ] Email notifications configured\n\n## üí° Future Enhancements\n\n- **Payment Integration**: Stripe for project deposits\n- **Project Management**: Detailed project tracking\n- **File Uploads**: Client document sharing\n- **Live Chat**: Real-time customer support\n- **Blog System**: CMS integration\n- **SEO Optimization**: Advanced meta tags and schema\n- **Performance**: Image optimization and caching\n- **Mobile App**: React Native companion app\n\n## üìû Support\n\nFor questions about this setup:\n- **Email**: hello@nexustech.dev\n- **Website**: [Your deployed site URL]\n- **Repository**: [Your GitHub repo URL]\n\n---\n\n**Built with ‚ù§Ô∏è for Nexus Tech Digital Solutions**"
        }
    ]
}